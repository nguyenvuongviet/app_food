generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model food {
  id        Int        @id @default(autoincrement())
  name      String?    @db.VarChar(255)
  image     String?    @db.VarChar(255)
  price     Float?     @db.Float
  desc      String?    @db.VarChar(255)
  type_id   Int?
  deletedBy Int        @default(0)
  isDeleted Boolean    @default(false)
  deletedAt DateTime?  @db.Timestamp(0)
  createAt  DateTime   @default(now()) @db.Timestamp(0)
  updateAt  DateTime   @default(now()) @db.Timestamp(0)
  food_type food_type? @relation(fields: [type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "food_ibfk_1")
  order     order[]
  sub_food  sub_food[]

  @@index([type_id], map: "type_id")
}

model food_type {
  id        Int       @id @default(autoincrement())
  name      String?   @db.VarChar(255)
  deletedBy Int       @default(0)
  isDeleted Boolean   @default(false)
  deletedAt DateTime? @db.Timestamp(0)
  createAt  DateTime  @default(now()) @db.Timestamp(0)
  updateAt  DateTime  @default(now()) @db.Timestamp(0)
  food      food[]
}

model like_res {
  id         Int         @id @default(autoincrement())
  user_id    Int?
  res_id     Int?
  date_like  DateTime?   @db.DateTime(0)
  deletedBy  Int         @default(0)
  isDeleted  Boolean     @default(false)
  deletedAt  DateTime?   @db.Timestamp(0)
  createAt   DateTime    @default(now()) @db.Timestamp(0)
  updateAt   DateTime    @default(now()) @db.Timestamp(0)
  user       user?       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "like_res_ibfk_1")
  restaurant restaurant? @relation(fields: [res_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "like_res_ibfk_2")

  @@index([res_id], map: "res_id")
  @@index([user_id], map: "user_id")
}

model order {
  id         Int       @id @default(autoincrement())
  user_id    Int?
  food_id    Int?
  amount     Int?
  code       String?   @db.VarChar(255)
  arr_sub_id String?   @db.VarChar(255)
  deletedBy  Int       @default(0)
  isDeleted  Boolean   @default(false)
  deletedAt  DateTime? @db.Timestamp(0)
  createAt   DateTime  @default(now()) @db.Timestamp(0)
  updateAt   DateTime  @default(now()) @db.Timestamp(0)
  user       user?     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_ibfk_1")
  food       food?     @relation(fields: [food_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_ibfk_2")

  @@index([food_id], map: "food_id")
  @@index([user_id], map: "user_id")
}

model rate_res {
  id         Int         @id @default(autoincrement())
  user_id    Int?
  res_id     Int?
  amount     Int?
  date_rate  DateTime?   @db.DateTime(0)
  deletedBy  Int         @default(0)
  isDeleted  Boolean     @default(false)
  deletedAt  DateTime?   @db.Timestamp(0)
  createAt   DateTime    @default(now()) @db.Timestamp(0)
  updateAt   DateTime    @default(now()) @db.Timestamp(0)
  user       user?       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "rate_res_ibfk_1")
  restaurant restaurant? @relation(fields: [res_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "rate_res_ibfk_2")

  @@index([res_id], map: "res_id")
  @@index([user_id], map: "user_id")
}

model restaurant {
  id        Int        @id @default(autoincrement())
  name      String?    @db.VarChar(255)
  image     String?    @db.VarChar(255)
  desc      String?    @db.VarChar(255)
  deletedBy Int        @default(0)
  isDeleted Boolean    @default(false)
  deletedAt DateTime?  @db.Timestamp(0)
  createAt  DateTime   @default(now()) @db.Timestamp(0)
  updateAt  DateTime   @default(now()) @db.Timestamp(0)
  like_res  like_res[]
  rate_res  rate_res[]
}

model sub_food {
  id        Int       @id @default(autoincrement())
  name      String?   @db.VarChar(255)
  price     Float?    @db.Float
  food_id   Int?
  deletedBy Int       @default(0)
  isDeleted Boolean   @default(false)
  deletedAt DateTime? @db.Timestamp(0)
  createAt  DateTime  @default(now()) @db.Timestamp(0)
  updateAt  DateTime  @default(now()) @db.Timestamp(0)
  food      food?     @relation(fields: [food_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "sub_food_ibfk_1")

  @@index([food_id], map: "food_id")
}

model user {
  id        Int        @id @default(autoincrement())
  full_name String?    @db.VarChar(255)
  email     String?    @db.VarChar(255)
  password  String?    @db.VarChar(255)
  deletedBy Int        @default(0)
  isDeleted Boolean    @default(false)
  deletedAt DateTime?  @db.Timestamp(0)
  createAt  DateTime   @default(now()) @db.Timestamp(0)
  updateAt  DateTime   @default(now()) @db.Timestamp(0)
  like_res  like_res[]
  order     order[]
  rate_res  rate_res[]
}
